name: Build ZAIInnov APK

# Déclenche le workflow sur push vers main ou manuellement
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      # 1️⃣ Récupération du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Installation de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3️⃣ Installer les dépendances et outils nécessaires
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip git zip unzip openjdk-17-jdk wget
          pip install --upgrade pip
          pip install buildozer cython virtualenv

      # 4️⃣ Installer le SDK Android et Build Tools
      - name: Install Android SDK and Build Tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip
          rm cmdline-tools.zip
          mv cmdline-tools latest
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      # 5️⃣ Build APK avec Buildozer
      - name: Build APK
        run: |
          buildozer -v android debug

      # 6️⃣ Télécharger le APK comme artefact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ZAIInnov-APK
          path: bin/*.apk

